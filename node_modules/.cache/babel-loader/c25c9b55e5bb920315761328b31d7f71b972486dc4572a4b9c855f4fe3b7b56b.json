{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\comps\\\\comps\\\\src\\\\Button.js\";\n// import PropTypes from 'prop-types'\n\nimport className from \"classnames\";\n\n// * since the the html element = component name then we refeer to the comp as wrapper, html underlying element\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Button(_ref) {\n  let {\n    children,\n    primary,\n    secondary,\n    success,\n    warning,\n    danger,\n    outline,\n    rounded\n  } = _ref;\n  const classes = className('flex items-center px-3 py-1.5 border', {\n    'border-blue-500 bg-blue-500 text-white': primary,\n    'border-gray-900 bg-gray-900 text-white': secondary,\n    'border-green-500 bg-green-500 text-white': success,\n    'border-yellow-500 bg-yellow-500 text-white': warning,\n    'border-red-500 bg-red-500 text-white': danger,\n    'rounded-full': rounded,\n    'bg-white': outline,\n    'text-blue-500': outline && primary,\n    'text-gray-900': outline && secondary,\n    'text-green-500': outline && success,\n    'text-yellow-500': outline && warning,\n    'text-red-500': outline && danger\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classes,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n// ! every button Wrapper will have this propType and function will be invoked when we create one\n_c = Button;\nButton.propTypes = {\n  // * first parameter is the current objects the wrapper has\n  // ! in case if value of any boolean prop that is not true it will be undefined by default\n  checkVariationValue: _ref2 => {\n    let {\n      primary,\n      secondary,\n      success,\n      warning,\n      danger\n    } = _ref2;\n    // * in js !!undefined is false\n    const count = Number(!!primary) + Number(!!secondary) + Number(!!success) + Number(!!warning) + Number(!!danger);\n    if (count > 1) return new Error('Only one of primary,secondary,success,warning,danger');\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["className","jsxDEV","_jsxDEV","Button","_ref","children","primary","secondary","success","warning","danger","outline","rounded","classes","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","checkVariationValue","_ref2","count","Number","Error","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/comps/comps/src/Button.js"],"sourcesContent":["// import PropTypes from 'prop-types'\r\n\r\nimport className from \"classnames\";\r\n\r\n// * since the the html element = component name then we refeer to the comp as wrapper, html underlying element\r\nexport default function Button({\r\n    children,\r\n    primary,\r\n    secondary,\r\n    success,\r\n    warning,\r\n    danger,\r\n    outline,\r\n    rounded,\r\n\r\n}) {\r\n\r\n    const classes = className('flex items-center px-3 py-1.5 border',{\r\n        'border-blue-500 bg-blue-500 text-white':primary,\r\n        'border-gray-900 bg-gray-900 text-white':secondary,\r\n        'border-green-500 bg-green-500 text-white':success,\r\n        'border-yellow-500 bg-yellow-500 text-white':warning,\r\n        'border-red-500 bg-red-500 text-white':danger,\r\n        'rounded-full':rounded,\r\n        'bg-white':outline,\r\n        'text-blue-500': outline && primary,\r\n        'text-gray-900': outline && secondary,\r\n        'text-green-500': outline && success,\r\n        'text-yellow-500': outline && warning,\r\n        'text-red-500': outline && danger,\r\n    });\r\n\r\n    return (\r\n    <button className={classes}>\r\n        {children} \r\n        </button>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// ! every button Wrapper will have this propType and function will be invoked when we create one\r\nButton.propTypes = {\r\n    // * first parameter is the current objects the wrapper has\r\n    // ! in case if value of any boolean prop that is not true it will be undefined by default\r\n    checkVariationValue:({primary,secondary,success,warning,danger})=>{\r\n        // * in js !!undefined is false\r\n        const count = Number(!!primary) + Number(!!secondary) + Number(!!success) + Number(!!warning) + Number(!!danger)\r\n\r\n        if (count > 1 )\r\n            return new Error('Only one of primary,secondary,success,warning,danger')\r\n    }\r\n};"],"mappings":";AAAA;;AAEA,OAAOA,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAU3B;EAAA,IAV4B;IAC3BC,QAAQ;IACRC,OAAO;IACPC,SAAS;IACTC,OAAO;IACPC,OAAO;IACPC,MAAM;IACNC,OAAO;IACPC;EAEJ,CAAC,GAAAR,IAAA;EAEG,MAAMS,OAAO,GAAGb,SAAS,CAAC,sCAAsC,EAAC;IAC7D,wCAAwC,EAACM,OAAO;IAChD,wCAAwC,EAACC,SAAS;IAClD,0CAA0C,EAACC,OAAO;IAClD,4CAA4C,EAACC,OAAO;IACpD,sCAAsC,EAACC,MAAM;IAC7C,cAAc,EAACE,OAAO;IACtB,UAAU,EAACD,OAAO;IAClB,eAAe,EAAEA,OAAO,IAAIL,OAAO;IACnC,eAAe,EAAEK,OAAO,IAAIJ,SAAS;IACrC,gBAAgB,EAAEI,OAAO,IAAIH,OAAO;IACpC,iBAAiB,EAAEG,OAAO,IAAIF,OAAO;IACrC,cAAc,EAAEE,OAAO,IAAID;EAC/B,CAAC,CAAC;EAEF,oBACAR,OAAA;IAAQF,SAAS,EAAEa,OAAQ;IAAAR,QAAA,EACtBA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEjB;;AASA;AAAAC,EAAA,GAzCwBf,MAAM;AA0C9BA,MAAM,CAACgB,SAAS,GAAG;EACf;EACA;EACAC,mBAAmB,EAACC,KAAA,IAA8C;IAAA,IAA7C;MAACf,OAAO;MAACC,SAAS;MAACC,OAAO;MAACC,OAAO;MAACC;IAAM,CAAC,GAAAW,KAAA;IAC3D;IACA,MAAMC,KAAK,GAAGC,MAAM,CAAC,CAAC,CAACjB,OAAO,CAAC,GAAGiB,MAAM,CAAC,CAAC,CAAChB,SAAS,CAAC,GAAGgB,MAAM,CAAC,CAAC,CAACf,OAAO,CAAC,GAAGe,MAAM,CAAC,CAAC,CAACd,OAAO,CAAC,GAAGc,MAAM,CAAC,CAAC,CAACb,MAAM,CAAC;IAEhH,IAAIY,KAAK,GAAG,CAAC,EACT,OAAO,IAAIE,KAAK,CAAC,sDAAsD,CAAC;EAChF;AACJ,CAAC;AAAC,IAAAN,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}