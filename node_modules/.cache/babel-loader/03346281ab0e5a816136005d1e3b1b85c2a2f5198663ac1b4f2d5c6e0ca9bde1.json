{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\comps\\\\comps\\\\src\\\\Button.js\";\nimport PropTypes from 'prop-types';\n\n// * since the the html element = component name then we refeer to the comp as wrapper, html underlying element\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Button(_ref) {\n  let {\n    children,\n    primary,\n    secondary,\n    success,\n    warning,\n    danger,\n    outline,\n    rounded\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"p-1 bg-blue-400 m-1\",\n    children: [children, \" \", primary]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n}\n\n// ! every button Wrapper will have this propType and function will be invoked when we create one\n_c = Button;\nButton.propTypes = {\n  // * first parameter is the current objects the wrapper has\n  // ! in case if value of any boolean prop that is not true it will be undefined by default\n  checkVariationValue: _ref2 => {\n    let {\n      primary,\n      secondary,\n      success,\n      warning,\n      danger\n    } = _ref2;\n    // * in js !!undefined is false\n    const count = Number(!!primary) + Number(!!secondary) + Number(!!success) + Number(!!warning) + Number(!!danger);\n    if (count > 1) return new Error('Only one of primary,secondary,success,warning,danger');\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["PropTypes","jsxDEV","_jsxDEV","Button","_ref","children","primary","secondary","success","warning","danger","outline","rounded","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","checkVariationValue","_ref2","count","Number","Error","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/comps/comps/src/Button.js"],"sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n// * since the the html element = component name then we refeer to the comp as wrapper, html underlying element\r\nexport default function Button({\r\n    children,\r\n    primary,\r\n    secondary,\r\n    success,\r\n    warning,\r\n    danger,\r\n    outline,\r\n    rounded,\r\n\r\n}) {\r\n    return <button className='p-1 bg-blue-400 m-1'>{children} {primary}</button>\r\n}\r\n\r\n// ! every button Wrapper will have this propType and function will be invoked when we create one\r\nButton.propTypes = {\r\n    // * first parameter is the current objects the wrapper has\r\n    // ! in case if value of any boolean prop that is not true it will be undefined by default\r\n    checkVariationValue:({primary,secondary,success,warning,danger})=>{\r\n        // * in js !!undefined is false\r\n        const count = Number(!!primary) + Number(!!secondary) + Number(!!success) + Number(!!warning) + Number(!!danger)\r\n\r\n        if (count > 1 )\r\n            return new Error('Only one of primary,secondary,success,warning,danger')\r\n    }\r\n};"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAU3B;EAAA,IAV4B;IAC3BC,QAAQ;IACRC,OAAO;IACPC,SAAS;IACTC,OAAO;IACPC,OAAO;IACPC,MAAM;IACNC,OAAO;IACPC;EAEJ,CAAC,GAAAR,IAAA;EACG,oBAAOF,OAAA;IAAQW,SAAS,EAAC,qBAAqB;IAAAR,QAAA,GAAEA,QAAQ,EAAC,GAAC,EAACC,OAAO;EAAA;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS,CAAC;AAChF;;AAEA;AAAAC,EAAA,GAdwBf,MAAM;AAe9BA,MAAM,CAACgB,SAAS,GAAG;EACf;EACA;EACAC,mBAAmB,EAACC,KAAA,IAA8C;IAAA,IAA7C;MAACf,OAAO;MAACC,SAAS;MAACC,OAAO;MAACC,OAAO;MAACC;IAAM,CAAC,GAAAW,KAAA;IAC3D;IACA,MAAMC,KAAK,GAAGC,MAAM,CAAC,CAAC,CAACjB,OAAO,CAAC,GAAGiB,MAAM,CAAC,CAAC,CAAChB,SAAS,CAAC,GAAGgB,MAAM,CAAC,CAAC,CAACf,OAAO,CAAC,GAAGe,MAAM,CAAC,CAAC,CAACd,OAAO,CAAC,GAAGc,MAAM,CAAC,CAAC,CAACb,MAAM,CAAC;IAEhH,IAAIY,KAAK,GAAG,CAAC,EACT,OAAO,IAAIE,KAAK,CAAC,sDAAsD,CAAC;EAChF;AACJ,CAAC;AAAC,IAAAN,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}